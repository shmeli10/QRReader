// Generated by data binding compiler. Do not edit!
package com.ostin.qrreader.databinding;

import android.view.LayoutInflater;
import android.view.SurfaceView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import com.ostin.qrreader.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentCodeReaderBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton allowCameraPermission;

  @NonNull
  public final TextView barCodeValue;

  @NonNull
  public final SurfaceView cameraPreview;

  @NonNull
  public final ImageView codeImg;

  @NonNull
  public final RelativeLayout contentWrapper;

  @NonNull
  public final ToggleButton flashLight;

  @NonNull
  public final TextView noCameraPermission;

  @NonNull
  public final ConstraintLayout reader;

  @Bindable
  protected boolean mHasCameraPermission;

  @Bindable
  protected boolean mHasStoragePermission;

  @Bindable
  protected boolean mCodeDetected;

  protected FragmentCodeReaderBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialButton allowCameraPermission, TextView barCodeValue, SurfaceView cameraPreview,
      ImageView codeImg, RelativeLayout contentWrapper, ToggleButton flashLight,
      TextView noCameraPermission, ConstraintLayout reader) {
    super(_bindingComponent, _root, _localFieldCount);
    this.allowCameraPermission = allowCameraPermission;
    this.barCodeValue = barCodeValue;
    this.cameraPreview = cameraPreview;
    this.codeImg = codeImg;
    this.contentWrapper = contentWrapper;
    this.flashLight = flashLight;
    this.noCameraPermission = noCameraPermission;
    this.reader = reader;
  }

  public abstract void setHasCameraPermission(boolean hasCameraPermission);

  public boolean getHasCameraPermission() {
    return mHasCameraPermission;
  }

  public abstract void setHasStoragePermission(boolean hasStoragePermission);

  public boolean getHasStoragePermission() {
    return mHasStoragePermission;
  }

  public abstract void setCodeDetected(boolean codeDetected);

  public boolean getCodeDetected() {
    return mCodeDetected;
  }

  @NonNull
  public static FragmentCodeReaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_code_reader, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentCodeReaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentCodeReaderBinding>inflateInternal(inflater, R.layout.fragment_code_reader, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentCodeReaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_code_reader, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentCodeReaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentCodeReaderBinding>inflateInternal(inflater, R.layout.fragment_code_reader, null, false, component);
  }

  public static FragmentCodeReaderBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentCodeReaderBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentCodeReaderBinding)bind(component, view, R.layout.fragment_code_reader);
  }
}
